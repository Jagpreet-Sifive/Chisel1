package NewEx

import chisel3._
import chisel3.util.Cat

  import chisel3._
 import chisel3.iotesters.{ChiselFlatSpec, Driver, PeekPokeTester}
import scala.util.Random
// import chisel3.util._




class Serialipo extends Module{
    val io =IO(new Bundle{

    val in =Input(UInt(1.W))
    val out =Output(UInt(3.W))
   })

   val q0 = RegNext(io.in)
   val q1 =RegNext(q0)
   val q2 =RegNext(q1)
   
    io.out := (Cat(q2,q1,q0))

}




class SerialipoTests (c:Serialipo) extends PeekPokeTester(c){
      for (i <- 0 until 9) {
          val in = Random.nextInt(1)
        }

      var  reg0 =0
      var reg1 =0
      var reg2 =0


   var temp =reg0
             reg0 =reg1
            reg1 =temp

       var temp2 =reg1
             reg1 =reg2
             reg2=temp2

      poke(c.in.reg0, reg0)
      poke(c.in.reg1,reg1)
      poke(c.in.reg2,reg2)


       step(1)

       expect(c.io.out , reg2)
  assert (Driver(()=> new Serialipo) {c => new SerialipoTests (c)})
}


