[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/home/jagpreets/MyProj./MyChiselProject/src/main/scala/NewEx/Paralleliso.scala, /home/jagpreets/MyProj./MyChiselProject/src/main/scala/NewEx/Serialiso.scala, /home/jagpreets/MyProj./MyChiselProject/src/main/scala/NewEx/Parallelipo.scala, /home/jagpreets/MyProj./MyChiselProject/src/main/scala/NewEx/Scala/Serialipo.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/jagpreets/Preact/Pract1/Subdir/src/main/scala/NewEx/Parallelipo.scala, /home/jagpreets/Preact/Pract1/Subdir/src/main/scala/NewEx/Paralleliso.scala, /home/jagpreets/Preact/Pract1/Subdir/src/main/scala/NewEx/Serialiso.scala, /home/jagpreets/Preact/Pract1/Subdir/src/main/scala/NewEx/Scala/Bengu.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(NewEx.Paraleliso, NeWEx.Serialiso, Scala.Serialipo, NewEx.Parallelipo, Scala.SerialipoTests)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll sources are invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 4 sources: invalidated sources (8) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 4 Scala sources to /home/jagpreets/Preact/Pract1/Subdir/target/scala-2.11/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.1.1:compile for Scala 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.11:1.1.1:compile for Scala 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler d9d3301 for Scala compiler version 2.11.12[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes:/home/jagpreets/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.12.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/jagpreets/Preact/Pract1/Subdir/target/scala-2.11/classes:/home/jagpreets/.ivy2/cache/edu.berkeley.cs/chisel3_2.11/jars/chisel3_2.11-3.1.8.jar:/home/jagpreets/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.12.jar:/home/jagpreets/.ivy2/cache/com.github.scopt/scopt_2.11/jars/scopt_2.11-3.7.0.jar:/home/jagpreets/.ivy2/cache/edu.berkeley.cs/firrtl_2.11/jars/firrtl_2.11-1.1.7.jar:/home/jagpreets/.ivy2/cache/org.antlr/antlr4/jars/antlr4-4.7.1.jar:/home/jagpreets/.ivy2/cache/org.antlr/antlr4-runtime/jars/antlr4-runtime-4.7.1.jar:/home/jagpreets/.ivy2/cache/org.antlr/antlr-runtime/jars/antlr-runtime-3.5.2.jar:/home/jagpreets/.ivy2/cache/org.antlr/ST4/jars/ST4-4.0.8.jar:/home/jagpreets/.ivy2/cache/org.abego.treelayout/org.abego.treelayout.core/bundles/org.abego.treelayout.core-1.0.3.jar:/home/jagpreets/.ivy2/cache/org.glassfish/javax.json/bundles/javax.json-1.0.4.jar:/home/jagpreets/.ivy2/cache/com.ibm.icu/icu4j/jars/icu4j-58.2.jar:/home/jagpreets/.ivy2/cache/com.typesafe.scala-logging/scala-logging_2.11/bundles/scala-logging_2.11-3.7.2.jar:/home/jagpreets/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/home/jagpreets/.ivy2/cache/ch.qos.logback/logback-classic/jars/logback-classic-1.2.3.jar:/home/jagpreets/.ivy2/cache/ch.qos.logback/logback-core/jars/logback-core-1.2.3.jar:/home/jagpreets/.ivy2/cache/net.jcazevedo/moultingyaml_2.11/jars/moultingyaml_2.11-0.4.0.jar:/home/jagpreets/.ivy2/cache/com.github.nscala-time/nscala-time_2.11/jars/nscala-time_2.11-2.14.0.jar:/home/jagpreets/.ivy2/cache/joda-time/joda-time/jars/joda-time-2.9.4.jar:/home/jagpreets/.ivy2/cache/org.joda/joda-convert/jars/joda-convert-1.2.jar:/home/jagpreets/.ivy2/cache/org.yaml/snakeyaml/bundles/snakeyaml-1.17.jar:/home/jagpreets/.ivy2/cache/org.json4s/json4s-native_2.11/jars/json4s-native_2.11-3.5.3.jar:/home/jagpreets/.ivy2/cache/org.json4s/json4s-core_2.11/jars/json4s-core_2.11-3.5.3.jar:/home/jagpreets/.ivy2/cache/org.json4s/json4s-ast_2.11/jars/json4s-ast_2.11-3.5.3.jar:/home/jagpreets/.ivy2/cache/org.json4s/json4s-scalap_2.11/jars/json4s-scalap_2.11-3.5.3.jar:/home/jagpreets/.ivy2/cache/com.thoughtworks.paranamer/paranamer/bundles/paranamer-2.8.jar:/home/jagpreets/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.6.jar:/home/jagpreets/.ivy2/cache/edu.berkeley.cs/chisel-iotesters_2.11/jars/chisel-iotesters_2.11-1.2.10.jar:/home/jagpreets/.ivy2/cache/edu.berkeley.cs/firrtl-interpreter_2.11/jars/firrtl-interpreter_2.11-1.1.7.jar:/home/jagpreets/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-3.0.1.jar:/home/jagpreets/.ivy2/cache/org.scalactic/scalactic_2.11/bundles/scalactic_2.11-3.0.1.jar:/home/jagpreets/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.0.4.jar:/home/jagpreets/.ivy2/cache/org.scalacheck/scalacheck_2.11/jars/scalacheck_2.11-1.13.4.jar:/home/jagpreets/.ivy2/cache/org.scala-sbt/test-interface/jars/test-interface-1.0.jar:/home/jagpreets/.ivy2/cache/org.scala-lang.modules/scala-jline/bundles/scala-jline-2.12.1.jar:/home/jagpreets/.ivy2/cache/org.fusesource.jansi/jansi/jars/jansi-1.11.jar:/home/jagpreets/.ivy2/cache/edu.berkeley.cs/treadle_2.11/jars/treadle_2.11-1.0.5.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.123533361 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Scala.BenguTester...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Scala.BenguTester)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Scala.BenguTester)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Scala.BenguTester,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(peekFixedPoint,[Default]), UsedName(_verbose,[Implicit]), UsedName(longToUnsignedBigInt,[Default]), UsedName(rnd,[Default]), UsedName(expect,[Default]), UsedName(reset,[Default]), UsedName(dut,[Default]), UsedName(expectFixedPoint$default$4,[Default]), UsedName(reset$default$1,[Default]), UsedName(intToUnsignedBigInt,[Default]), UsedName(wait,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(expect$default$3,[Default]), UsedName(backend,[Default]), UsedName(println,[Default]), UsedName($asInstanceOf,[Default]), UsedName(logger,[Implicit]), UsedName(incTime,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(step,[Default]), UsedName(equals,[Default]), UsedName(fail,[Default]), UsedName(int,[Implicit]), UsedName(optionsManager,[Default]), UsedName(BenguTester,[Default]), UsedName(peek,[Default]), UsedName(println$default$1,[Default]), UsedName(synchronized,[Default]), UsedName(longToInt,[Implicit]), UsedName(##,[Default]), UsedName(expectFixedPoint,[Default]), UsedName(toString,[Default]), UsedName(pokeAt,[Default]), UsedName(_base,[Implicit]), UsedName(poke,[Default]), UsedName(Scala;BenguTester;init;,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(peekAt,[Default]), UsedName(finish,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(t,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(pokeFixedPoint,[Default]))) invalidates 1 classes due to The Scala.BenguTester has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_verbose,[Implicit]), UsedName(logger,[Implicit]), UsedName(int,[Implicit]), UsedName(longToInt,[Implicit]), UsedName(_base,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Scala.BenguTester)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Scala.Bengu...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Scala.Bengu)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Scala.Bengu)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Scala.Bengu,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(portsContains,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(wait,[Default]), UsedName(out,[Default]), UsedName(override_clock,[Default]), UsedName(parentModName,[Default]), UsedName(IO,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(getIds,[Default]), UsedName($asInstanceOf,[Default]), UsedName(annotate,[Default]), UsedName(b_x,[Default]), UsedName(==,[Default]), UsedName(_parent,[Default]), UsedName(eq,[Default]), UsedName($init$,[Default]), UsedName(desiredName,[Default]), UsedName(Scala;Bengu;init;,[Default]), UsedName(getModulePorts,[Default]), UsedName(equals,[Default]), UsedName(c_x,[Default]), UsedName(getRef,[Default]), UsedName(getPorts,[Default]), UsedName(suggestName,[Default]), UsedName(synchronized,[Default]), UsedName(portsSize,[Default]), UsedName(toNamed,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(instanceName,[Default]), UsedName(_onModuleClose,[Default]), UsedName(compileOptions,[Default]), UsedName(getPublicFields,[Default]), UsedName(forceName,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(clock,[Default]), UsedName(addCommand,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addPostnameHook,[Default]), UsedName(Bengu,[Default]), UsedName(getCommands,[Default]), UsedName(pathName,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(_id,[Default]), UsedName(notifyAll,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(name,[Default]), UsedName(_component,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(asInstanceOf,[Default]), UsedName(a_x,[Default]), UsedName(nameIds,[Default]), UsedName(override_reset,[Default]), UsedName(_closed,[Default]), UsedName(generateComponent,[Default]), UsedName(_namespace,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The Scala.Bengu has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(portsContains,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(wait,[Default]), UsedName(out,[Default]), UsedName(override_clock,[Default]), UsedName(parentModName,[Default]), UsedName(IO,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(getIds,[Default]), UsedName($asInstanceOf,[Default]), UsedName(annotate,[Default]), UsedName(b_x,[Default]), UsedName(==,[Default]), UsedName(_parent,[Default]), UsedName(eq,[Default]), UsedName($init$,[Default]), UsedName(desiredName,[Default]), UsedName(Scala;Bengu;init;,[Default]), UsedName(getModulePorts,[Default]), UsedName(equals,[Default]), UsedName(c_x,[Default]), UsedName(getRef,[Default]), UsedName(getPorts,[Default]), UsedName(suggestName,[Default]), UsedName(synchronized,[Default]), UsedName(portsSize,[Default]), UsedName(toNamed,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(instanceName,[Default]), UsedName(_onModuleClose,[Default]), UsedName(compileOptions,[Default]), UsedName(getPublicFields,[Default]), UsedName(forceName,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(clock,[Default]), UsedName(addCommand,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addPostnameHook,[Default]), UsedName(Bengu,[Default]), UsedName(getCommands,[Default]), UsedName(pathName,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(_id,[Default]), UsedName(notifyAll,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(name,[Default]), UsedName(_component,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(asInstanceOf,[Default]), UsedName(a_x,[Default]), UsedName(nameIds,[Default]), UsedName(override_reset,[Default]), UsedName(_closed,[Default]), UsedName(generateComponent,[Default]), UsedName(_namespace,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Scala.Bengu)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Scala.Serialipo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Scala.Serialipo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Scala.Serialipo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Scala.Serialipo,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(portsContains,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(wait,[Default]), UsedName(out,[Default]), UsedName(override_clock,[Default]), UsedName(parentModName,[Default]), UsedName(IO,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(getIds,[Default]), UsedName($asInstanceOf,[Default]), UsedName(annotate,[Default]), UsedName(==,[Default]), UsedName(_parent,[Default]), UsedName(eq,[Default]), UsedName($init$,[Default]), UsedName(desiredName,[Default]), UsedName(getModulePorts,[Default]), UsedName(Serialipo,[Default]), UsedName(equals,[Default]), UsedName(getRef,[Default]), UsedName(q1,[Default]), UsedName(getPorts,[Default]), UsedName(suggestName,[Default]), UsedName(synchronized,[Default]), UsedName(portsSize,[Default]), UsedName(toNamed,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(instanceName,[Default]), UsedName(_onModuleClose,[Default]), UsedName(compileOptions,[Default]), UsedName(getPublicFields,[Default]), UsedName(forceName,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(clock,[Default]), UsedName(addCommand,[Default]), UsedName(q0,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addPostnameHook,[Default]), UsedName(getCommands,[Default]), UsedName(pathName,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(_id,[Default]), UsedName(notifyAll,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(name,[Default]), UsedName(_component,[Default]), UsedName(q2,[Default]), UsedName(Scala;Serialipo;init;,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(asInstanceOf,[Default]), UsedName(nameIds,[Default]), UsedName(in,[Default]), UsedName(override_reset,[Default]), UsedName(_closed,[Default]), UsedName(generateComponent,[Default]), UsedName(_namespace,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The Scala.Serialipo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(io,[Default]), UsedName(reset,[Default]), UsedName(portsContains,[Default]), UsedName(initializeInParent,[Default]), UsedName(setRef,[Default]), UsedName(wait,[Default]), UsedName(out,[Default]), UsedName(override_clock,[Default]), UsedName(parentModName,[Default]), UsedName(IO,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(getIds,[Default]), UsedName($asInstanceOf,[Default]), UsedName(annotate,[Default]), UsedName(==,[Default]), UsedName(_parent,[Default]), UsedName(eq,[Default]), UsedName($init$,[Default]), UsedName(desiredName,[Default]), UsedName(getModulePorts,[Default]), UsedName(Serialipo,[Default]), UsedName(equals,[Default]), UsedName(getRef,[Default]), UsedName(q1,[Default]), UsedName(getPorts,[Default]), UsedName(suggestName,[Default]), UsedName(synchronized,[Default]), UsedName(portsSize,[Default]), UsedName(toNamed,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(circuitName,[Default]), UsedName(instanceName,[Default]), UsedName(_onModuleClose,[Default]), UsedName(compileOptions,[Default]), UsedName(getPublicFields,[Default]), UsedName(forceName,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(clock,[Default]), UsedName(addCommand,[Default]), UsedName(q0,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(addPostnameHook,[Default]), UsedName(getCommands,[Default]), UsedName(pathName,[Default]), UsedName(addId,[Default]), UsedName(finalize,[Default]), UsedName(_id,[Default]), UsedName(notifyAll,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(parentPathName,[Default]), UsedName(name,[Default]), UsedName(_component,[Default]), UsedName(q2,[Default]), UsedName(Scala;Serialipo;init;,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(asInstanceOf,[Default]), UsedName(nameIds,[Default]), UsedName(in,[Default]), UsedName(override_reset,[Default]), UsedName(_closed,[Default]), UsedName(generateComponent,[Default]), UsedName(_namespace,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Scala.Serialipo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Scala.SerialipoTests...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Scala.SerialipoTests)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Scala.SerialipoTests)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Scala.SerialipoTests,ModifiedNames(changes = UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(getClass,[Default]), UsedName(peekFixedPoint,[Default]), UsedName(_verbose,[Implicit]), UsedName(longToUnsignedBigInt,[Default]), UsedName(rnd,[Default]), UsedName(expect,[Default]), UsedName(reset,[Default]), UsedName(dut,[Default]), UsedName(expectFixedPoint$default$4,[Default]), UsedName(SerialipoTests,[Default]), UsedName(reset$default$1,[Default]), UsedName(intToUnsignedBigInt,[Default]), UsedName(wait,[Default]), UsedName($isInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(expect$default$3,[Default]), UsedName(temp2,[Default]), UsedName(backend,[Default]), UsedName(println,[Default]), UsedName($asInstanceOf,[Default]), UsedName(logger,[Implicit]), UsedName(Scala;SerialipoTests;init;,[Default]), UsedName(incTime,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(step,[Default]), UsedName(reg2,[Default]), UsedName(reg0,[Default]), UsedName(equals,[Default]), UsedName(fail,[Default]), UsedName(int,[Implicit]), UsedName(optionsManager,[Default]), UsedName(peek,[Default]), UsedName(println$default$1,[Default]), UsedName(synchronized,[Default]), UsedName(longToInt,[Implicit]), UsedName(##,[Default]), UsedName(reg1,[Default]), UsedName(expectFixedPoint,[Default]), UsedName(toString,[Default]), UsedName(pokeAt,[Default]), UsedName(_base,[Implicit]), UsedName(poke,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(temp,[Default]), UsedName(peekAt,[Default]), UsedName(finish,[Default]), UsedName(finalize,[Default]), UsedName(notifyAll,[Default]), UsedName(t,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(pokeFixedPoint,[Default]))) invalidates 1 classes due to The Scala.SerialipoTests has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(_verbose,[Implicit]), UsedName(logger,[Implicit]), UsedName(int,[Implicit]), UsedName(longToInt,[Implicit]), UsedName(_base,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Scala.SerialipoTests)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
